import math
from 运算模块 import 矩阵乘法, 矩阵转置

def 透视(物体顶点, 视角=108, 宽高比=1, 近平面=2, 远平面=10, 视图矩阵=None):
    f = 1 / math.tan(math.radians(视角) / 2)
    透视投影矩阵 = [
        [f / 宽高比, 0, 0, 0],
        [0, f, 0, 0],
        [0, 0, (远平面 + 近平面) / (近平面 - 远平面), (2 * 远平面 * 近平面) / (近平面 - 远平面)],
        [0, 0, -1, 0]
    ]
    

    齐次顶点 = []
    for 顶点 in 物体顶点:
        齐次顶点.append(顶点 + [1.0])
    

    if 视图矩阵 is not None:
        视图变换结果 = 矩阵乘法(齐次顶点, 矩阵转置(视图矩阵))
        齐次顶点 = 视图变换结果

    投影结果 = 矩阵乘法(齐次顶点, 矩阵转置(透视投影矩阵))
    

    for i in range(len(投影结果)):
        w = 投影结果[i][3]
        if w != 0:
            投影结果[i][0] /= w
            投影结果[i][1] /= w
            投影结果[i][2] /= w
    

    return [[顶点[0], 顶点[1], 顶点[2]] for 顶点 in 投影结果]
